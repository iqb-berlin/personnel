image: node:lts-alpine

stages:
  - setup
  - build
  - test
  - packetize
  - deploy

install-dependencies:
  stage: setup
  interruptible: true
  only:
    - master
    - merge_requests
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
      - .npm/
  script:
    - npm ci --cache .npm
  artifacts:
    paths:
      - node_modules

.distributed:
  interruptible: true
  only:
    - master
    - merge_requests
  needs:
    - install-dependencies
  artifacts:
    paths:
      - node_modules/.cache/nx

build-app:
  stage: build
  extends: .distributed
  script:
    - apk update && apk add git
    - npx nx affected --base=HEAD~1 --target=build --parallel=3
  artifacts:
    paths:
      - dist

test-app:
  stage: test
  extends: .distributed
  script:
    - apk update && apk add git
    - npx nx affected --base=HEAD~1 --target=test --parallel=2

build-docker-image:
  stage: packetize
  extends: .distributed
  needs:
    - install-dependencies
    - build-app
  image: docker:git
  variables:
    DOCKER_TLS_CERTDIR: ""
    REGISTRY: $CI_REGISTRY
    REGISTRY_USER: $CI_REGISTRY_USER
    REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD
    REGISTRY_PROJECT: "/${CI_PROJECT_PATH}/"
  services:
    - docker:dind
  before_script:
    - apk update && apk add npm
    - npm i -g npx
    - export TAG=$(git rev-parse --short HEAD)
    - echo "$REGISTRY_PASSWORD" | docker login -u $REGISTRY_USER --password-stdin $REGISTRY
  script:
    - npx nx affected --base=HEAD~1 --target=docker-build --registry=$REGISTRY --registryProject=$REGISTRY_PROJECT --tag=$TAG --parallel=2
  after_script:
    - docker logout $REGISTRY
